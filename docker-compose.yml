services:
  postgres:
    image: postgres:16
    container_name: insurance-postgres-db
    env_file:
      - .venv/.env
    volumes:
      - insurance_postgres_volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      resources:
        limits:
          cpus: '0.01'
        reservations:
          cpus: '0.01'

  manual-run:
    container_name: insurance_manual_run
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: true
    command: bash -c "
      /usr/local/bin/jupyter execute ~/../ratings.ipynb; 
      /usr/local/bin/jupyter execute ~/../cash_flows.ipynb"
    restart: on-failure
    env_file:
      - .venv/.env
    volumes:
      - insurance_volume:/data
    deploy:
      resources:
        limits:
          cpus: '0.1'
        reservations:
          cpus: '0.1'
    depends_on:
      - postgres

  schedule:
    container_name: insurance_schedule
    build: .
    command: bash -c "
      printenv > /etc/environment; 
      crontab /etc/cron.monthly/crontab;
      cron -f && tail -f /var/log/cron.log"
    restart: on-failure
    env_file:
      - .venv/.env
    volumes:
      - insurance_volume:/data
    deploy:
      resources:
        limits:
          cpus: '0.1'
        reservations:
          cpus: '0.1'
    depends_on:
      - postgres

volumes:
  insurance_postgres_volume:
  insurance_volume:
    driver: local
